{"ast":null,"code":"import _toConsumableArray from \"/Users/mu.../Documents/Boolean/React/WeatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { argsert } from './argsert.js';\nimport { assertNotStrictEqual } from './typings/common-types.js';\nimport { levenshtein as distance } from './utils/levenshtein.js';\nimport { objFilter } from './utils/obj-filter.js';\nvar specialKeys = ['$0', '--', '_'];\nexport function validation(yargs, usage, shim) {\n  var __ = shim.y18n.__;\n  var __n = shim.y18n.__n;\n  var self = {};\n\n  self.nonOptionCount = function nonOptionCount(argv) {\n    var demandedCommands = yargs.getDemandedCommands();\n    var positionalCount = argv._.length + (argv['--'] ? argv['--'].length : 0);\n\n    var _s = positionalCount - yargs.getInternalMethods().getContext().commands.length;\n\n    if (demandedCommands._ && (_s < demandedCommands._.min || _s > demandedCommands._.max)) {\n      if (_s < demandedCommands._.min) {\n        if (demandedCommands._.minMsg !== undefined) {\n          usage.fail(demandedCommands._.minMsg ? demandedCommands._.minMsg.replace(/\\$0/g, _s.toString()).replace(/\\$1/, demandedCommands._.min.toString()) : null);\n        } else {\n          usage.fail(__n('Not enough non-option arguments: got %s, need at least %s', 'Not enough non-option arguments: got %s, need at least %s', _s, _s.toString(), demandedCommands._.min.toString()));\n        }\n      } else if (_s > demandedCommands._.max) {\n        if (demandedCommands._.maxMsg !== undefined) {\n          usage.fail(demandedCommands._.maxMsg ? demandedCommands._.maxMsg.replace(/\\$0/g, _s.toString()).replace(/\\$1/, demandedCommands._.max.toString()) : null);\n        } else {\n          usage.fail(__n('Too many non-option arguments: got %s, maximum of %s', 'Too many non-option arguments: got %s, maximum of %s', _s, _s.toString(), demandedCommands._.max.toString()));\n        }\n      }\n    }\n  };\n\n  self.positionalCount = function positionalCount(required, observed) {\n    if (observed < required) {\n      usage.fail(__n('Not enough non-option arguments: got %s, need at least %s', 'Not enough non-option arguments: got %s, need at least %s', observed, observed + '', required + ''));\n    }\n  };\n\n  self.requiredArguments = function requiredArguments(argv, demandedOptions) {\n    var missing = null;\n\n    for (var _i = 0, _Object$keys = Object.keys(demandedOptions); _i < _Object$keys.length; _i++) {\n      var key = _Object$keys[_i];\n\n      if (!Object.prototype.hasOwnProperty.call(argv, key) || typeof argv[key] === 'undefined') {\n        missing = missing || {};\n        missing[key] = demandedOptions[key];\n      }\n    }\n\n    if (missing) {\n      var customMsgs = [];\n\n      for (var _i2 = 0, _Object$keys2 = Object.keys(missing); _i2 < _Object$keys2.length; _i2++) {\n        var _key = _Object$keys2[_i2];\n        var msg = missing[_key];\n\n        if (msg && customMsgs.indexOf(msg) < 0) {\n          customMsgs.push(msg);\n        }\n      }\n\n      var customMsg = customMsgs.length ? \"\\n\".concat(customMsgs.join('\\n')) : '';\n      usage.fail(__n('Missing required argument: %s', 'Missing required arguments: %s', Object.keys(missing).length, Object.keys(missing).join(', ') + customMsg));\n    }\n  };\n\n  self.unknownArguments = function unknownArguments(argv, aliases, positionalMap, isDefaultCommand) {\n    var checkPositionals = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n\n    var _a;\n\n    var commandKeys = yargs.getInternalMethods().getCommandInstance().getCommands();\n    var unknown = [];\n    var currentContext = yargs.getInternalMethods().getContext();\n    Object.keys(argv).forEach(function (key) {\n      if (!specialKeys.includes(key) && !Object.prototype.hasOwnProperty.call(positionalMap, key) && !Object.prototype.hasOwnProperty.call(yargs.getInternalMethods().getParseContext(), key) && !self.isValidAndSomeAliasIsNotNew(key, aliases)) {\n        unknown.push(key);\n      }\n    });\n\n    if (checkPositionals && (currentContext.commands.length > 0 || commandKeys.length > 0 || isDefaultCommand)) {\n      argv._.slice(currentContext.commands.length).forEach(function (key) {\n        if (!commandKeys.includes('' + key)) {\n          unknown.push('' + key);\n        }\n      });\n    }\n\n    if (checkPositionals) {\n      var demandedCommands = yargs.getDemandedCommands();\n      var maxNonOptDemanded = ((_a = demandedCommands._) === null || _a === void 0 ? void 0 : _a.max) || 0;\n      var expected = currentContext.commands.length + maxNonOptDemanded;\n\n      if (expected < argv._.length) {\n        argv._.slice(expected).forEach(function (key) {\n          key = String(key);\n\n          if (!currentContext.commands.includes(key) && !unknown.includes(key)) {\n            unknown.push(key);\n          }\n        });\n      }\n    }\n\n    if (unknown.length) {\n      usage.fail(__n('Unknown argument: %s', 'Unknown arguments: %s', unknown.length, unknown.map(function (s) {\n        return s.trim() ? s : \"\\\"\".concat(s, \"\\\"\");\n      }).join(', ')));\n    }\n  };\n\n  self.unknownCommands = function unknownCommands(argv) {\n    var commandKeys = yargs.getInternalMethods().getCommandInstance().getCommands();\n    var unknown = [];\n    var currentContext = yargs.getInternalMethods().getContext();\n\n    if (currentContext.commands.length > 0 || commandKeys.length > 0) {\n      argv._.slice(currentContext.commands.length).forEach(function (key) {\n        if (!commandKeys.includes('' + key)) {\n          unknown.push('' + key);\n        }\n      });\n    }\n\n    if (unknown.length > 0) {\n      usage.fail(__n('Unknown command: %s', 'Unknown commands: %s', unknown.length, unknown.join(', ')));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  self.isValidAndSomeAliasIsNotNew = function isValidAndSomeAliasIsNotNew(key, aliases) {\n    if (!Object.prototype.hasOwnProperty.call(aliases, key)) {\n      return false;\n    }\n\n    var newAliases = yargs.parsed.newAliases;\n    return [key].concat(_toConsumableArray(aliases[key])).some(function (a) {\n      return !Object.prototype.hasOwnProperty.call(newAliases, a) || !newAliases[key];\n    });\n  };\n\n  self.limitedChoices = function limitedChoices(argv) {\n    var options = yargs.getOptions();\n    var invalid = {};\n    if (!Object.keys(options.choices).length) return;\n    Object.keys(argv).forEach(function (key) {\n      if (specialKeys.indexOf(key) === -1 && Object.prototype.hasOwnProperty.call(options.choices, key)) {\n        [].concat(argv[key]).forEach(function (value) {\n          if (options.choices[key].indexOf(value) === -1 && value !== undefined) {\n            invalid[key] = (invalid[key] || []).concat(value);\n          }\n        });\n      }\n    });\n    var invalidKeys = Object.keys(invalid);\n    if (!invalidKeys.length) return;\n\n    var msg = __('Invalid values:');\n\n    invalidKeys.forEach(function (key) {\n      msg += \"\\n  \".concat(__('Argument: %s, Given: %s, Choices: %s', key, usage.stringifiedValues(invalid[key]), usage.stringifiedValues(options.choices[key])));\n    });\n    usage.fail(msg);\n  };\n\n  var implied = {};\n\n  self.implies = function implies(key, value) {\n    argsert('<string|object> [array|number|string]', [key, value], arguments.length);\n\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.implies(k, key[k]);\n      });\n    } else {\n      yargs.global(key);\n\n      if (!implied[key]) {\n        implied[key] = [];\n      }\n\n      if (Array.isArray(value)) {\n        value.forEach(function (i) {\n          return self.implies(key, i);\n        });\n      } else {\n        assertNotStrictEqual(value, undefined, shim);\n        implied[key].push(value);\n      }\n    }\n  };\n\n  self.getImplied = function getImplied() {\n    return implied;\n  };\n\n  function keyExists(argv, val) {\n    var num = Number(val);\n    val = isNaN(num) ? val : num;\n\n    if (typeof val === 'number') {\n      val = argv._.length >= val;\n    } else if (val.match(/^--no-.+/)) {\n      val = val.match(/^--no-(.+)/)[1];\n      val = !Object.prototype.hasOwnProperty.call(argv, val);\n    } else {\n      val = Object.prototype.hasOwnProperty.call(argv, val);\n    }\n\n    return val;\n  }\n\n  self.implications = function implications(argv) {\n    var implyFail = [];\n    Object.keys(implied).forEach(function (key) {\n      var origKey = key;\n      (implied[key] || []).forEach(function (value) {\n        var key = origKey;\n        var origValue = value;\n        key = keyExists(argv, key);\n        value = keyExists(argv, value);\n\n        if (key && !value) {\n          implyFail.push(\" \".concat(origKey, \" -> \").concat(origValue));\n        }\n      });\n    });\n\n    if (implyFail.length) {\n      var msg = \"\".concat(__('Implications failed:'), \"\\n\");\n      implyFail.forEach(function (value) {\n        msg += value;\n      });\n      usage.fail(msg);\n    }\n  };\n\n  var conflicting = {};\n\n  self.conflicts = function conflicts(key, value) {\n    argsert('<string|object> [array|string]', [key, value], arguments.length);\n\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.conflicts(k, key[k]);\n      });\n    } else {\n      yargs.global(key);\n\n      if (!conflicting[key]) {\n        conflicting[key] = [];\n      }\n\n      if (Array.isArray(value)) {\n        value.forEach(function (i) {\n          return self.conflicts(key, i);\n        });\n      } else {\n        conflicting[key].push(value);\n      }\n    }\n  };\n\n  self.getConflicting = function () {\n    return conflicting;\n  };\n\n  self.conflicting = function conflictingFn(argv) {\n    Object.keys(argv).forEach(function (key) {\n      if (conflicting[key]) {\n        conflicting[key].forEach(function (value) {\n          if (value && argv[key] !== undefined && argv[value] !== undefined) {\n            usage.fail(__('Arguments %s and %s are mutually exclusive', key, value));\n          }\n        });\n      }\n    });\n\n    if (yargs.getInternalMethods().getParserConfiguration()['strip-dashed']) {\n      Object.keys(conflicting).forEach(function (key) {\n        conflicting[key].forEach(function (value) {\n          if (value && argv[shim.Parser.camelCase(key)] !== undefined && argv[shim.Parser.camelCase(value)] !== undefined) {\n            usage.fail(__('Arguments %s and %s are mutually exclusive', key, value));\n          }\n        });\n      });\n    }\n  };\n\n  self.recommendCommands = function recommendCommands(cmd, potentialCommands) {\n    var threshold = 3;\n    potentialCommands = potentialCommands.sort(function (a, b) {\n      return b.length - a.length;\n    });\n    var recommended = null;\n    var bestDistance = Infinity;\n\n    for (var i = 0, candidate; (candidate = potentialCommands[i]) !== undefined; i++) {\n      var d = distance(cmd, candidate);\n\n      if (d <= threshold && d < bestDistance) {\n        bestDistance = d;\n        recommended = candidate;\n      }\n    }\n\n    if (recommended) usage.fail(__('Did you mean %s?', recommended));\n  };\n\n  self.reset = function reset(localLookup) {\n    implied = objFilter(implied, function (k) {\n      return !localLookup[k];\n    });\n    conflicting = objFilter(conflicting, function (k) {\n      return !localLookup[k];\n    });\n    return self;\n  };\n\n  var frozens = [];\n\n  self.freeze = function freeze() {\n    frozens.push({\n      implied: implied,\n      conflicting: conflicting\n    });\n  };\n\n  self.unfreeze = function unfreeze() {\n    var frozen = frozens.pop();\n    assertNotStrictEqual(frozen, undefined, shim);\n    implied = frozen.implied;\n    conflicting = frozen.conflicting;\n  };\n\n  return self;\n}","map":{"version":3,"names":["argsert","assertNotStrictEqual","levenshtein","distance","objFilter","specialKeys","validation","yargs","usage","shim","__","y18n","__n","self","nonOptionCount","argv","demandedCommands","getDemandedCommands","positionalCount","_","length","_s","getInternalMethods","getContext","commands","min","max","minMsg","undefined","fail","replace","toString","maxMsg","required","observed","requiredArguments","demandedOptions","missing","Object","keys","key","prototype","hasOwnProperty","call","customMsgs","msg","indexOf","push","customMsg","join","unknownArguments","aliases","positionalMap","isDefaultCommand","checkPositionals","_a","commandKeys","getCommandInstance","getCommands","unknown","currentContext","forEach","includes","getParseContext","isValidAndSomeAliasIsNotNew","slice","maxNonOptDemanded","expected","String","map","s","trim","unknownCommands","newAliases","parsed","some","a","limitedChoices","options","getOptions","invalid","choices","concat","value","invalidKeys","stringifiedValues","implied","implies","arguments","k","global","Array","isArray","i","getImplied","keyExists","val","num","Number","isNaN","match","implications","implyFail","origKey","origValue","conflicting","conflicts","getConflicting","conflictingFn","getParserConfiguration","Parser","camelCase","recommendCommands","cmd","potentialCommands","threshold","sort","b","recommended","bestDistance","Infinity","candidate","d","reset","localLookup","frozens","freeze","unfreeze","frozen","pop"],"sources":["/Users/mu.../Documents/Boolean/React/WeatherApp/node_modules/yargs/build/lib/validation.js"],"sourcesContent":["import { argsert } from './argsert.js';\nimport { assertNotStrictEqual, } from './typings/common-types.js';\nimport { levenshtein as distance } from './utils/levenshtein.js';\nimport { objFilter } from './utils/obj-filter.js';\nconst specialKeys = ['$0', '--', '_'];\nexport function validation(yargs, usage, shim) {\n    const __ = shim.y18n.__;\n    const __n = shim.y18n.__n;\n    const self = {};\n    self.nonOptionCount = function nonOptionCount(argv) {\n        const demandedCommands = yargs.getDemandedCommands();\n        const positionalCount = argv._.length + (argv['--'] ? argv['--'].length : 0);\n        const _s = positionalCount - yargs.getInternalMethods().getContext().commands.length;\n        if (demandedCommands._ &&\n            (_s < demandedCommands._.min || _s > demandedCommands._.max)) {\n            if (_s < demandedCommands._.min) {\n                if (demandedCommands._.minMsg !== undefined) {\n                    usage.fail(demandedCommands._.minMsg\n                        ? demandedCommands._.minMsg\n                            .replace(/\\$0/g, _s.toString())\n                            .replace(/\\$1/, demandedCommands._.min.toString())\n                        : null);\n                }\n                else {\n                    usage.fail(__n('Not enough non-option arguments: got %s, need at least %s', 'Not enough non-option arguments: got %s, need at least %s', _s, _s.toString(), demandedCommands._.min.toString()));\n                }\n            }\n            else if (_s > demandedCommands._.max) {\n                if (demandedCommands._.maxMsg !== undefined) {\n                    usage.fail(demandedCommands._.maxMsg\n                        ? demandedCommands._.maxMsg\n                            .replace(/\\$0/g, _s.toString())\n                            .replace(/\\$1/, demandedCommands._.max.toString())\n                        : null);\n                }\n                else {\n                    usage.fail(__n('Too many non-option arguments: got %s, maximum of %s', 'Too many non-option arguments: got %s, maximum of %s', _s, _s.toString(), demandedCommands._.max.toString()));\n                }\n            }\n        }\n    };\n    self.positionalCount = function positionalCount(required, observed) {\n        if (observed < required) {\n            usage.fail(__n('Not enough non-option arguments: got %s, need at least %s', 'Not enough non-option arguments: got %s, need at least %s', observed, observed + '', required + ''));\n        }\n    };\n    self.requiredArguments = function requiredArguments(argv, demandedOptions) {\n        let missing = null;\n        for (const key of Object.keys(demandedOptions)) {\n            if (!Object.prototype.hasOwnProperty.call(argv, key) ||\n                typeof argv[key] === 'undefined') {\n                missing = missing || {};\n                missing[key] = demandedOptions[key];\n            }\n        }\n        if (missing) {\n            const customMsgs = [];\n            for (const key of Object.keys(missing)) {\n                const msg = missing[key];\n                if (msg && customMsgs.indexOf(msg) < 0) {\n                    customMsgs.push(msg);\n                }\n            }\n            const customMsg = customMsgs.length ? `\\n${customMsgs.join('\\n')}` : '';\n            usage.fail(__n('Missing required argument: %s', 'Missing required arguments: %s', Object.keys(missing).length, Object.keys(missing).join(', ') + customMsg));\n        }\n    };\n    self.unknownArguments = function unknownArguments(argv, aliases, positionalMap, isDefaultCommand, checkPositionals = true) {\n        var _a;\n        const commandKeys = yargs\n            .getInternalMethods()\n            .getCommandInstance()\n            .getCommands();\n        const unknown = [];\n        const currentContext = yargs.getInternalMethods().getContext();\n        Object.keys(argv).forEach(key => {\n            if (!specialKeys.includes(key) &&\n                !Object.prototype.hasOwnProperty.call(positionalMap, key) &&\n                !Object.prototype.hasOwnProperty.call(yargs.getInternalMethods().getParseContext(), key) &&\n                !self.isValidAndSomeAliasIsNotNew(key, aliases)) {\n                unknown.push(key);\n            }\n        });\n        if (checkPositionals &&\n            (currentContext.commands.length > 0 ||\n                commandKeys.length > 0 ||\n                isDefaultCommand)) {\n            argv._.slice(currentContext.commands.length).forEach(key => {\n                if (!commandKeys.includes('' + key)) {\n                    unknown.push('' + key);\n                }\n            });\n        }\n        if (checkPositionals) {\n            const demandedCommands = yargs.getDemandedCommands();\n            const maxNonOptDemanded = ((_a = demandedCommands._) === null || _a === void 0 ? void 0 : _a.max) || 0;\n            const expected = currentContext.commands.length + maxNonOptDemanded;\n            if (expected < argv._.length) {\n                argv._.slice(expected).forEach(key => {\n                    key = String(key);\n                    if (!currentContext.commands.includes(key) &&\n                        !unknown.includes(key)) {\n                        unknown.push(key);\n                    }\n                });\n            }\n        }\n        if (unknown.length) {\n            usage.fail(__n('Unknown argument: %s', 'Unknown arguments: %s', unknown.length, unknown.map(s => (s.trim() ? s : `\"${s}\"`)).join(', ')));\n        }\n    };\n    self.unknownCommands = function unknownCommands(argv) {\n        const commandKeys = yargs\n            .getInternalMethods()\n            .getCommandInstance()\n            .getCommands();\n        const unknown = [];\n        const currentContext = yargs.getInternalMethods().getContext();\n        if (currentContext.commands.length > 0 || commandKeys.length > 0) {\n            argv._.slice(currentContext.commands.length).forEach(key => {\n                if (!commandKeys.includes('' + key)) {\n                    unknown.push('' + key);\n                }\n            });\n        }\n        if (unknown.length > 0) {\n            usage.fail(__n('Unknown command: %s', 'Unknown commands: %s', unknown.length, unknown.join(', ')));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    self.isValidAndSomeAliasIsNotNew = function isValidAndSomeAliasIsNotNew(key, aliases) {\n        if (!Object.prototype.hasOwnProperty.call(aliases, key)) {\n            return false;\n        }\n        const newAliases = yargs.parsed.newAliases;\n        return [key, ...aliases[key]].some(a => !Object.prototype.hasOwnProperty.call(newAliases, a) || !newAliases[key]);\n    };\n    self.limitedChoices = function limitedChoices(argv) {\n        const options = yargs.getOptions();\n        const invalid = {};\n        if (!Object.keys(options.choices).length)\n            return;\n        Object.keys(argv).forEach(key => {\n            if (specialKeys.indexOf(key) === -1 &&\n                Object.prototype.hasOwnProperty.call(options.choices, key)) {\n                [].concat(argv[key]).forEach(value => {\n                    if (options.choices[key].indexOf(value) === -1 &&\n                        value !== undefined) {\n                        invalid[key] = (invalid[key] || []).concat(value);\n                    }\n                });\n            }\n        });\n        const invalidKeys = Object.keys(invalid);\n        if (!invalidKeys.length)\n            return;\n        let msg = __('Invalid values:');\n        invalidKeys.forEach(key => {\n            msg += `\\n  ${__('Argument: %s, Given: %s, Choices: %s', key, usage.stringifiedValues(invalid[key]), usage.stringifiedValues(options.choices[key]))}`;\n        });\n        usage.fail(msg);\n    };\n    let implied = {};\n    self.implies = function implies(key, value) {\n        argsert('<string|object> [array|number|string]', [key, value], arguments.length);\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(k => {\n                self.implies(k, key[k]);\n            });\n        }\n        else {\n            yargs.global(key);\n            if (!implied[key]) {\n                implied[key] = [];\n            }\n            if (Array.isArray(value)) {\n                value.forEach(i => self.implies(key, i));\n            }\n            else {\n                assertNotStrictEqual(value, undefined, shim);\n                implied[key].push(value);\n            }\n        }\n    };\n    self.getImplied = function getImplied() {\n        return implied;\n    };\n    function keyExists(argv, val) {\n        const num = Number(val);\n        val = isNaN(num) ? val : num;\n        if (typeof val === 'number') {\n            val = argv._.length >= val;\n        }\n        else if (val.match(/^--no-.+/)) {\n            val = val.match(/^--no-(.+)/)[1];\n            val = !Object.prototype.hasOwnProperty.call(argv, val);\n        }\n        else {\n            val = Object.prototype.hasOwnProperty.call(argv, val);\n        }\n        return val;\n    }\n    self.implications = function implications(argv) {\n        const implyFail = [];\n        Object.keys(implied).forEach(key => {\n            const origKey = key;\n            (implied[key] || []).forEach(value => {\n                let key = origKey;\n                const origValue = value;\n                key = keyExists(argv, key);\n                value = keyExists(argv, value);\n                if (key && !value) {\n                    implyFail.push(` ${origKey} -> ${origValue}`);\n                }\n            });\n        });\n        if (implyFail.length) {\n            let msg = `${__('Implications failed:')}\\n`;\n            implyFail.forEach(value => {\n                msg += value;\n            });\n            usage.fail(msg);\n        }\n    };\n    let conflicting = {};\n    self.conflicts = function conflicts(key, value) {\n        argsert('<string|object> [array|string]', [key, value], arguments.length);\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(k => {\n                self.conflicts(k, key[k]);\n            });\n        }\n        else {\n            yargs.global(key);\n            if (!conflicting[key]) {\n                conflicting[key] = [];\n            }\n            if (Array.isArray(value)) {\n                value.forEach(i => self.conflicts(key, i));\n            }\n            else {\n                conflicting[key].push(value);\n            }\n        }\n    };\n    self.getConflicting = () => conflicting;\n    self.conflicting = function conflictingFn(argv) {\n        Object.keys(argv).forEach(key => {\n            if (conflicting[key]) {\n                conflicting[key].forEach(value => {\n                    if (value && argv[key] !== undefined && argv[value] !== undefined) {\n                        usage.fail(__('Arguments %s and %s are mutually exclusive', key, value));\n                    }\n                });\n            }\n        });\n        if (yargs.getInternalMethods().getParserConfiguration()['strip-dashed']) {\n            Object.keys(conflicting).forEach(key => {\n                conflicting[key].forEach(value => {\n                    if (value &&\n                        argv[shim.Parser.camelCase(key)] !== undefined &&\n                        argv[shim.Parser.camelCase(value)] !== undefined) {\n                        usage.fail(__('Arguments %s and %s are mutually exclusive', key, value));\n                    }\n                });\n            });\n        }\n    };\n    self.recommendCommands = function recommendCommands(cmd, potentialCommands) {\n        const threshold = 3;\n        potentialCommands = potentialCommands.sort((a, b) => b.length - a.length);\n        let recommended = null;\n        let bestDistance = Infinity;\n        for (let i = 0, candidate; (candidate = potentialCommands[i]) !== undefined; i++) {\n            const d = distance(cmd, candidate);\n            if (d <= threshold && d < bestDistance) {\n                bestDistance = d;\n                recommended = candidate;\n            }\n        }\n        if (recommended)\n            usage.fail(__('Did you mean %s?', recommended));\n    };\n    self.reset = function reset(localLookup) {\n        implied = objFilter(implied, k => !localLookup[k]);\n        conflicting = objFilter(conflicting, k => !localLookup[k]);\n        return self;\n    };\n    const frozens = [];\n    self.freeze = function freeze() {\n        frozens.push({\n            implied,\n            conflicting,\n        });\n    };\n    self.unfreeze = function unfreeze() {\n        const frozen = frozens.pop();\n        assertNotStrictEqual(frozen, undefined, shim);\n        ({ implied, conflicting } = frozen);\n    };\n    return self;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}