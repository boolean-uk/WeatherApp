{"ast":null,"code":"import _slicedToArray from \"/Users/mu.../Documents/Boolean/React/WeatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/mu.../Documents/Boolean/React/WeatherApp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport WeatherHome from \"./components/WeatherHomeScreen\";\nimport \"./components/styles/style.css\";\nimport { useEffect, useState } from \"react\";\nimport { query } from \"express\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var api = {\n    key: \"cd51bfb08430241168a813edfe9e9d8f\",\n    base: \"https://api.openweathermap.org/data/2.5\"\n  };\n  useEffect(function () {\n    fetch(\"\".concat(api.base, \"weather?q=\").concat(query, \"&units=metric&APPID=\").concat(api.key)).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      setWeather(data); // const { temp } = data.main;\n      // const place = data.name;\n      // const { description, icon } = data.weather[0];\n      // const { sunrise, sunset } = data.sys;\n    });\n  }, []);\n\n  function SearchWeatherLocation(SearchEvent) {\n    if (SearchEvent.key === \"Enter\") {\n      fetch(\"\".concat(api.base, \"weather?q=\").concat(query, \"&units=metric&APPID=\").concat(api.key)).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        setWeather(result);\n        setQuery(\"\");\n        console.log(result);\n      });\n    }\n  }\n\n  console.log(weather);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WeatherHome, {\n      weather: weather,\n      setWeather: setWeather,\n      search: search,\n      setSearch: setSearch,\n      SearchWeatherLocation: SearchWeatherLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"eipbmmO7lSu2Z58R8+A6UsPUZ4g=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["WeatherHome","useEffect","useState","query","App","weather","setWeather","search","setSearch","api","key","base","fetch","then","res","json","data","SearchWeatherLocation","SearchEvent","result","setQuery","console","log"],"sources":["/Users/mu.../Documents/Boolean/React/WeatherApp/src/App.js"],"sourcesContent":["import WeatherHome from \"./components/WeatherHomeScreen\";\nimport \"./components/styles/style.css\";\nimport { useEffect, useState } from \"react\";\nimport { query } from \"express\";\n\nexport default function App() {\n  const [weather, setWeather] = useState([]);\n  const [search, setSearch] = useState([]);\n\n  const api = {\n    key: \"cd51bfb08430241168a813edfe9e9d8f\",\n    base: \"https://api.openweathermap.org/data/2.5\",\n  };\n\n  useEffect(() => {\n    fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setWeather(data);\n        // const { temp } = data.main;\n        // const place = data.name;\n        // const { description, icon } = data.weather[0];\n        // const { sunrise, sunset } = data.sys;\n      });\n  }, []);\n\n  function SearchWeatherLocation(SearchEvent) {\n    if (SearchEvent.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\"\");\n          console.log(result);\n        });\n    }\n  }\n\n  console.log(weather);\n\n  return (\n    <>\n      <WeatherHome\n        weather={weather}\n        setWeather={setWeather}\n        search={search}\n        setSearch={setSearch}\n        SearchWeatherLocation={SearchWeatherLocation}\n      />\n      <main></main>\n    </>\n  );\n}\n"],"mappings":";;;;;AAAA,OAAOA,WAAP,MAAwB,gCAAxB;AACA,OAAO,+BAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,SAAtB;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,gBAA8BF,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOG,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAA4BJ,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAOK,MAAP;EAAA,IAAeC,SAAf;;EAEA,IAAMC,GAAG,GAAG;IACVC,GAAG,EAAE,kCADK;IAEVC,IAAI,EAAE;EAFI,CAAZ;EAKAV,SAAS,CAAC,YAAM;IACdW,KAAK,WAAIH,GAAG,CAACE,IAAR,uBAAyBR,KAAzB,iCAAqDM,GAAG,CAACC,GAAzD,EAAL,CACGG,IADH,CACQ,UAACC,GAAD;MAAA,OAASA,GAAG,CAACC,IAAJ,EAAT;IAAA,CADR,EAEGF,IAFH,CAEQ,UAACG,IAAD,EAAU;MACdV,UAAU,CAACU,IAAD,CAAV,CADc,CAEd;MACA;MACA;MACA;IACD,CARH;EASD,CAVQ,EAUN,EAVM,CAAT;;EAYA,SAASC,qBAAT,CAA+BC,WAA/B,EAA4C;IAC1C,IAAIA,WAAW,CAACR,GAAZ,KAAoB,OAAxB,EAAiC;MAC/BE,KAAK,WAAIH,GAAG,CAACE,IAAR,uBAAyBR,KAAzB,iCAAqDM,GAAG,CAACC,GAAzD,EAAL,CACGG,IADH,CACQ,UAACC,GAAD;QAAA,OAASA,GAAG,CAACC,IAAJ,EAAT;MAAA,CADR,EAEGF,IAFH,CAEQ,UAACM,MAAD,EAAY;QAChBb,UAAU,CAACa,MAAD,CAAV;QACAC,QAAQ,CAAC,EAAD,CAAR;QACAC,OAAO,CAACC,GAAR,CAAYH,MAAZ;MACD,CANH;IAOD;EACF;;EAEDE,OAAO,CAACC,GAAR,CAAYjB,OAAZ;EAEA,oBACE;IAAA,wBACE,QAAC,WAAD;MACE,OAAO,EAAEA,OADX;MAEE,UAAU,EAAEC,UAFd;MAGE,MAAM,EAAEC,MAHV;MAIE,SAAS,EAAEC,SAJb;MAKE,qBAAqB,EAAES;IALzB;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAA;MAAA;MAAA;IAAA,QARF;EAAA,gBADF;AAYD;;GA/CuBb,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}