{"ast":null,"code":"'use strict';\n\nimport _toConsumableArray from \"/Users/mu.../Documents/Boolean/React/WeatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { notStrictEqual, strictEqual } from 'assert';\nimport cliui from 'cliui';\nimport escalade from 'escalade/sync';\nimport { inspect } from 'util';\nimport { readFileSync } from 'fs';\nimport { fileURLToPath } from 'url';\nimport Parser from 'yargs-parser';\nimport { basename, dirname, extname, relative, resolve } from 'path';\nimport { getProcessArgvBin } from '../../build/lib/utils/process-argv.js';\nimport { YError } from '../../build/lib/yerror.js';\nimport y18n from 'y18n';\nvar REQUIRE_ERROR = 'require is not supported by ESM';\nvar REQUIRE_DIRECTORY_ERROR = 'loading a directory of commands is not supported yet for ESM';\n\nvar __dirname;\n\ntry {\n  __dirname = fileURLToPath(import.meta.url);\n} catch (e) {\n  __dirname = process.cwd();\n}\n\nvar mainFilename = __dirname.substring(0, __dirname.lastIndexOf('node_modules'));\n\nexport default {\n  assert: {\n    notStrictEqual: notStrictEqual,\n    strictEqual: strictEqual\n  },\n  cliui: cliui,\n  findUp: escalade,\n  getEnv: function getEnv(key) {\n    return process.env[key];\n  },\n  inspect: inspect,\n  getCallerFile: function getCallerFile() {\n    throw new YError(REQUIRE_DIRECTORY_ERROR);\n  },\n  getProcessArgvBin: getProcessArgvBin,\n  mainFilename: mainFilename || process.cwd(),\n  Parser: Parser,\n  path: {\n    basename: basename,\n    dirname: dirname,\n    extname: extname,\n    relative: relative,\n    resolve: resolve\n  },\n  process: {\n    argv: function argv() {\n      return process.argv;\n    },\n    cwd: process.cwd,\n    emitWarning: function emitWarning(warning, type) {\n      return process.emitWarning(warning, type);\n    },\n    execPath: function execPath() {\n      return process.execPath;\n    },\n    exit: process.exit,\n    nextTick: process.nextTick,\n    stdColumns: typeof process.stdout.columns !== 'undefined' ? process.stdout.columns : null\n  },\n  readFileSync: readFileSync,\n  require: function require() {\n    throw new YError(REQUIRE_ERROR);\n  },\n  requireDirectory: function requireDirectory() {\n    throw new YError(REQUIRE_DIRECTORY_ERROR);\n  },\n  stringWidth: function stringWidth(str) {\n    return _toConsumableArray(str).length;\n  },\n  y18n: y18n({\n    directory: resolve(__dirname, '../../../locales'),\n    updateFiles: false\n  })\n};","map":{"version":3,"names":["notStrictEqual","strictEqual","cliui","escalade","inspect","readFileSync","fileURLToPath","Parser","basename","dirname","extname","relative","resolve","getProcessArgvBin","YError","y18n","REQUIRE_ERROR","REQUIRE_DIRECTORY_ERROR","__dirname","import","meta","url","e","process","cwd","mainFilename","substring","lastIndexOf","assert","findUp","getEnv","key","env","getCallerFile","path","argv","emitWarning","warning","type","execPath","exit","nextTick","stdColumns","stdout","columns","require","requireDirectory","stringWidth","str","length","directory","updateFiles"],"sources":["/Users/mu.../Documents/Boolean/React/WeatherApp/node_modules/yargs/lib/platform-shims/esm.mjs"],"sourcesContent":["'use strict'\n\nimport { notStrictEqual, strictEqual } from 'assert'\nimport cliui from 'cliui'\nimport escalade from 'escalade/sync'\nimport { inspect } from 'util'\nimport { readFileSync } from 'fs'\nimport { fileURLToPath } from 'url';\nimport Parser from 'yargs-parser'\nimport { basename, dirname, extname, relative, resolve } from 'path'\nimport { getProcessArgvBin } from '../../build/lib/utils/process-argv.js'\nimport { YError } from '../../build/lib/yerror.js'\nimport y18n from 'y18n'\n\nconst REQUIRE_ERROR = 'require is not supported by ESM'\nconst REQUIRE_DIRECTORY_ERROR = 'loading a directory of commands is not supported yet for ESM'\n\nlet __dirname;\ntry {\n  __dirname = fileURLToPath(import.meta.url);\n} catch (e) {\n  __dirname = process.cwd();\n}\nconst mainFilename = __dirname.substring(0, __dirname.lastIndexOf('node_modules'));\n\nexport default {\n  assert: {\n    notStrictEqual,\n    strictEqual\n  },\n  cliui,\n  findUp: escalade,\n  getEnv: (key) => {\n    return process.env[key]\n  },\n  inspect,\n  getCallerFile: () => {\n    throw new YError(REQUIRE_DIRECTORY_ERROR)\n  },\n  getProcessArgvBin,\n  mainFilename: mainFilename || process.cwd(),\n  Parser,\n  path: {\n    basename,\n    dirname,\n    extname,\n    relative,\n    resolve\n  },\n  process: {\n    argv: () => process.argv,\n    cwd: process.cwd,\n    emitWarning: (warning, type) => process.emitWarning(warning, type),\n    execPath: () => process.execPath,\n    exit: process.exit,\n    nextTick: process.nextTick,\n    stdColumns: typeof process.stdout.columns !== 'undefined' ? process.stdout.columns : null\n  },\n  readFileSync,\n  require: () => {\n    throw new YError(REQUIRE_ERROR)\n  },\n  requireDirectory: () => {\n    throw new YError(REQUIRE_DIRECTORY_ERROR)\n  },\n  stringWidth: (str) => {\n    return [...str].length\n  },\n  y18n: y18n({\n    directory: resolve(__dirname, '../../../locales'),\n    updateFiles: false\n  })\n}\n"],"mappings":"AAAA;;;AAEA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,QAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,YAAT,QAA6B,IAA7B;AACA,SAASC,aAAT,QAA8B,KAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,OAA5B,EAAqCC,QAArC,EAA+CC,OAA/C,QAA8D,MAA9D;AACA,SAASC,iBAAT,QAAkC,uCAAlC;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,IAAMC,aAAa,GAAG,iCAAtB;AACA,IAAMC,uBAAuB,GAAG,8DAAhC;;AAEA,IAAIC,SAAJ;;AACA,IAAI;EACFA,SAAS,GAAGZ,aAAa,CAACa,MAAM,CAACC,IAAP,CAAYC,GAAb,CAAzB;AACD,CAFD,CAEE,OAAOC,CAAP,EAAU;EACVJ,SAAS,GAAGK,OAAO,CAACC,GAAR,EAAZ;AACD;;AACD,IAAMC,YAAY,GAAGP,SAAS,CAACQ,SAAV,CAAoB,CAApB,EAAuBR,SAAS,CAACS,WAAV,CAAsB,cAAtB,CAAvB,CAArB;;AAEA,eAAe;EACbC,MAAM,EAAE;IACN5B,cAAc,EAAdA,cADM;IAENC,WAAW,EAAXA;EAFM,CADK;EAKbC,KAAK,EAALA,KALa;EAMb2B,MAAM,EAAE1B,QANK;EAOb2B,MAAM,EAAE,gBAACC,GAAD,EAAS;IACf,OAAOR,OAAO,CAACS,GAAR,CAAYD,GAAZ,CAAP;EACD,CATY;EAUb3B,OAAO,EAAPA,OAVa;EAWb6B,aAAa,EAAE,yBAAM;IACnB,MAAM,IAAInB,MAAJ,CAAWG,uBAAX,CAAN;EACD,CAbY;EAcbJ,iBAAiB,EAAjBA,iBAda;EAebY,YAAY,EAAEA,YAAY,IAAIF,OAAO,CAACC,GAAR,EAfjB;EAgBbjB,MAAM,EAANA,MAhBa;EAiBb2B,IAAI,EAAE;IACJ1B,QAAQ,EAARA,QADI;IAEJC,OAAO,EAAPA,OAFI;IAGJC,OAAO,EAAPA,OAHI;IAIJC,QAAQ,EAARA,QAJI;IAKJC,OAAO,EAAPA;EALI,CAjBO;EAwBbW,OAAO,EAAE;IACPY,IAAI,EAAE;MAAA,OAAMZ,OAAO,CAACY,IAAd;IAAA,CADC;IAEPX,GAAG,EAAED,OAAO,CAACC,GAFN;IAGPY,WAAW,EAAE,qBAACC,OAAD,EAAUC,IAAV;MAAA,OAAmBf,OAAO,CAACa,WAAR,CAAoBC,OAApB,EAA6BC,IAA7B,CAAnB;IAAA,CAHN;IAIPC,QAAQ,EAAE;MAAA,OAAMhB,OAAO,CAACgB,QAAd;IAAA,CAJH;IAKPC,IAAI,EAAEjB,OAAO,CAACiB,IALP;IAMPC,QAAQ,EAAElB,OAAO,CAACkB,QANX;IAOPC,UAAU,EAAE,OAAOnB,OAAO,CAACoB,MAAR,CAAeC,OAAtB,KAAkC,WAAlC,GAAgDrB,OAAO,CAACoB,MAAR,CAAeC,OAA/D,GAAyE;EAP9E,CAxBI;EAiCbvC,YAAY,EAAZA,YAjCa;EAkCbwC,OAAO,EAAE,mBAAM;IACb,MAAM,IAAI/B,MAAJ,CAAWE,aAAX,CAAN;EACD,CApCY;EAqCb8B,gBAAgB,EAAE,4BAAM;IACtB,MAAM,IAAIhC,MAAJ,CAAWG,uBAAX,CAAN;EACD,CAvCY;EAwCb8B,WAAW,EAAE,qBAACC,GAAD,EAAS;IACpB,OAAO,mBAAIA,GAAJ,EAASC,MAAhB;EACD,CA1CY;EA2CblC,IAAI,EAAEA,IAAI,CAAC;IACTmC,SAAS,EAAEtC,OAAO,CAACM,SAAD,EAAY,kBAAZ,CADT;IAETiC,WAAW,EAAE;EAFJ,CAAD;AA3CG,CAAf"},"metadata":{},"sourceType":"module"}