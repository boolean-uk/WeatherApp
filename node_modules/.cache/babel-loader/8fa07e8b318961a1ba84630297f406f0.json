{"ast":null,"code":"import _slicedToArray from \"/Users/mu.../Documents/Boolean/React/WeatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/mu.../Documents/Boolean/React/WeatherApp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport WeatherHome from \"./components/WeatherHomeScreen\";\nimport \"./components/styles/style.css\";\nimport { useState } from \"react\"; // import { query } from \"express\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  var api = {\n    key: \"cd51bfb08430241168a813edfe9e9d8f\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n  };\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1]; // this can go directly in the form for the search bar\n\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentLoaction = _useState6[0],\n      setCurrentLocation = _useState6[1]; // when the user types a new location, you use setLocation to store the state and present it to the user\n  // when user presses enter or clicks the search button you call setCurrentLocation\n\n\n  useEffect(function () {//   if currentLocation is not empty -> then do a fetch to the API\n    // fetch\n  }, [currentLocation]);\n  console.log(weather);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WeatherHome, {\n      weather: weather,\n      setWeather: setWeather,\n      search: search,\n      setSearch: setSearch,\n      SearchWeatherLocation: SearchWeatherLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"cYHkJkimjI2f8mL04joPMmzVZtI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["WeatherHome","useState","App","weather","setWeather","api","key","base","search","setSearch","currentLoaction","setCurrentLocation","useEffect","currentLocation","console","log","SearchWeatherLocation"],"sources":["/Users/mu.../Documents/Boolean/React/WeatherApp/src/App.js"],"sourcesContent":["import WeatherHome from \"./components/WeatherHomeScreen\";\nimport \"./components/styles/style.css\";\nimport { useState } from \"react\";\n// import { query } from \"express\";\n\nexport default function App() {\n  const [weather, setWeather] = useState([]);\n\n  const api = {\n    key: \"cd51bfb08430241168a813edfe9e9d8f\",\n    base: \"https://api.openweathermap.org/data/2.5/\",\n  };\n\n  const [search, setSearch] = useState(\"\"); // this can go directly in the form for the search bar\n  const [currentLoaction, setCurrentLocation] = useState(\"\");\n\n  // when the user types a new location, you use setLocation to store the state and present it to the user\n  // when user presses enter or clicks the search button you call setCurrentLocation\n\n  useEffect(() => {\n    //   if currentLocation is not empty -> then do a fetch to the API\n    // fetch\n  }, [currentLocation]);\n\n  console.log(weather);\n\n  return (\n    <>\n      <WeatherHome\n        weather={weather}\n        setWeather={setWeather}\n        search={search}\n        setSearch={setSearch}\n        SearchWeatherLocation={SearchWeatherLocation}\n      />\n      <main></main>\n    </>\n  );\n}\n"],"mappings":";;;;;AAAA,OAAOA,WAAP,MAAwB,gCAAxB;AACA,OAAO,+BAAP;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,gBAA8BD,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOE,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,IAAMC,GAAG,GAAG;IACVC,GAAG,EAAE,kCADK;IAEVC,IAAI,EAAE;EAFI,CAAZ;;EAKA,iBAA4BN,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAOO,MAAP;EAAA,IAAeC,SAAf,iBAR4B,CAQc;;;EAC1C,iBAA8CR,QAAQ,CAAC,EAAD,CAAtD;EAAA;EAAA,IAAOS,eAAP;EAAA,IAAwBC,kBAAxB,iBAT4B,CAW5B;EACA;;;EAEAC,SAAS,CAAC,YAAM,CACd;IACA;EACD,CAHQ,EAGN,CAACC,eAAD,CAHM,CAAT;EAKAC,OAAO,CAACC,GAAR,CAAYZ,OAAZ;EAEA,oBACE;IAAA,wBACE,QAAC,WAAD;MACE,OAAO,EAAEA,OADX;MAEE,UAAU,EAAEC,UAFd;MAGE,MAAM,EAAEI,MAHV;MAIE,SAAS,EAAEC,SAJb;MAKE,qBAAqB,EAAEO;IALzB;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAA;MAAA;MAAA;IAAA,QARF;EAAA,gBADF;AAYD;;GAjCuBd,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}