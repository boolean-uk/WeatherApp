{"ast":null,"code":"import _toConsumableArray from \"/Users/mu.../Documents/Boolean/React/WeatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/mu.../Documents/Boolean/React/WeatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toArray from \"/Users/mu.../Documents/Boolean/React/WeatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nimport _classCallCheck from \"/Users/mu.../Documents/Boolean/React/WeatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mu.../Documents/Boolean/React/WeatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { assertNotStrictEqual } from './typings/common-types.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { applyMiddleware, commandMiddlewareFactory } from './middleware.js';\nimport { parseCommand } from './parse-command.js';\nimport { isYargsInstance } from './yargs-factory.js';\nimport { maybeAsyncResult } from './utils/maybe-async-result.js';\nimport whichModule from './utils/which-module.js';\nvar DEFAULT_MARKER = /(^\\*)|(^\\$0)/;\nexport var CommandInstance = /*#__PURE__*/function () {\n  function CommandInstance(usage, validation, globalMiddleware, shim) {\n    _classCallCheck(this, CommandInstance);\n\n    this.requireCache = new Set();\n    this.handlers = {};\n    this.aliasMap = {};\n    this.frozens = [];\n    this.shim = shim;\n    this.usage = usage;\n    this.globalMiddleware = globalMiddleware;\n    this.validation = validation;\n  }\n\n  _createClass(CommandInstance, [{\n    key: \"addDirectory\",\n    value: function addDirectory(dir, req, callerFile, opts) {\n      var _this = this;\n\n      opts = opts || {};\n      if (typeof opts.recurse !== 'boolean') opts.recurse = false;\n      if (!Array.isArray(opts.extensions)) opts.extensions = ['js'];\n      var parentVisit = typeof opts.visit === 'function' ? opts.visit : function (o) {\n        return o;\n      };\n\n      opts.visit = function (obj, joined, filename) {\n        var visited = parentVisit(obj, joined, filename);\n\n        if (visited) {\n          if (_this.requireCache.has(joined)) return visited;else _this.requireCache.add(joined);\n\n          _this.addHandler(visited);\n        }\n\n        return visited;\n      };\n\n      this.shim.requireDirectory({\n        require: req,\n        filename: callerFile\n      }, dir, opts);\n    }\n  }, {\n    key: \"addHandler\",\n    value: function addHandler(cmd, description, builder, handler, commandMiddleware, deprecated) {\n      var _this2 = this;\n\n      var aliases = [];\n      var middlewares = commandMiddlewareFactory(commandMiddleware);\n\n      handler = handler || function () {};\n\n      if (Array.isArray(cmd)) {\n        if (isCommandAndAliases(cmd)) {\n          var _cmd = cmd;\n\n          var _cmd2 = _toArray(_cmd);\n\n          cmd = _cmd2[0];\n          aliases = _cmd2.slice(1);\n        } else {\n          var _iterator = _createForOfIteratorHelper(cmd),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _command = _step.value;\n              this.addHandler(_command);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      } else if (isCommandHandlerDefinition(cmd)) {\n        var _command2 = Array.isArray(cmd.command) || typeof cmd.command === 'string' ? cmd.command : this.moduleName(cmd);\n\n        if (cmd.aliases) _command2 = [].concat(_command2).concat(cmd.aliases);\n        this.addHandler(_command2, this.extractDesc(cmd), cmd.builder, cmd.handler, cmd.middlewares, cmd.deprecated);\n        return;\n      } else if (isCommandBuilderDefinition(builder)) {\n        this.addHandler([cmd].concat(aliases), description, builder.builder, builder.handler, builder.middlewares, builder.deprecated);\n        return;\n      }\n\n      if (typeof cmd === 'string') {\n        var parsedCommand = parseCommand(cmd);\n        aliases = aliases.map(function (alias) {\n          return parseCommand(alias).cmd;\n        });\n        var isDefault = false;\n        var parsedAliases = [parsedCommand.cmd].concat(aliases).filter(function (c) {\n          if (DEFAULT_MARKER.test(c)) {\n            isDefault = true;\n            return false;\n          }\n\n          return true;\n        });\n        if (parsedAliases.length === 0 && isDefault) parsedAliases.push('$0');\n\n        if (isDefault) {\n          parsedCommand.cmd = parsedAliases[0];\n          aliases = parsedAliases.slice(1);\n          cmd = cmd.replace(DEFAULT_MARKER, parsedCommand.cmd);\n        }\n\n        aliases.forEach(function (alias) {\n          _this2.aliasMap[alias] = parsedCommand.cmd;\n        });\n\n        if (description !== false) {\n          this.usage.command(cmd, description, isDefault, aliases, deprecated);\n        }\n\n        this.handlers[parsedCommand.cmd] = {\n          original: cmd,\n          description: description,\n          handler: handler,\n          builder: builder || {},\n          middlewares: middlewares,\n          deprecated: deprecated,\n          demanded: parsedCommand.demanded,\n          optional: parsedCommand.optional\n        };\n        if (isDefault) this.defaultCommand = this.handlers[parsedCommand.cmd];\n      }\n    }\n  }, {\n    key: \"getCommandHandlers\",\n    value: function getCommandHandlers() {\n      return this.handlers;\n    }\n  }, {\n    key: \"getCommands\",\n    value: function getCommands() {\n      return Object.keys(this.handlers).concat(Object.keys(this.aliasMap));\n    }\n  }, {\n    key: \"hasDefaultCommand\",\n    value: function hasDefaultCommand() {\n      return !!this.defaultCommand;\n    }\n  }, {\n    key: \"runCommand\",\n    value: function runCommand(command, yargs, parsed, commandIndex, helpOnly, helpOrVersionSet) {\n      var _this3 = this;\n\n      var commandHandler = this.handlers[command] || this.handlers[this.aliasMap[command]] || this.defaultCommand;\n      var currentContext = yargs.getInternalMethods().getContext();\n      var parentCommands = currentContext.commands.slice();\n      var isDefaultCommand = !command;\n\n      if (command) {\n        currentContext.commands.push(command);\n        currentContext.fullCommands.push(commandHandler.original);\n      }\n\n      var builderResult = this.applyBuilderUpdateUsageAndParse(isDefaultCommand, commandHandler, yargs, parsed.aliases, parentCommands, commandIndex, helpOnly, helpOrVersionSet);\n      return isPromise(builderResult) ? builderResult.then(function (result) {\n        return _this3.applyMiddlewareAndGetResult(isDefaultCommand, commandHandler, result.innerArgv, currentContext, helpOnly, result.aliases, yargs);\n      }) : this.applyMiddlewareAndGetResult(isDefaultCommand, commandHandler, builderResult.innerArgv, currentContext, helpOnly, builderResult.aliases, yargs);\n    }\n  }, {\n    key: \"applyBuilderUpdateUsageAndParse\",\n    value: function applyBuilderUpdateUsageAndParse(isDefaultCommand, commandHandler, yargs, aliases, parentCommands, commandIndex, helpOnly, helpOrVersionSet) {\n      var _this4 = this;\n\n      var builder = commandHandler.builder;\n      var innerYargs = yargs;\n\n      if (isCommandBuilderCallback(builder)) {\n        var builderOutput = builder(yargs.getInternalMethods().reset(aliases), helpOrVersionSet);\n\n        if (isPromise(builderOutput)) {\n          return builderOutput.then(function (output) {\n            innerYargs = isYargsInstance(output) ? output : yargs;\n            return _this4.parseAndUpdateUsage(isDefaultCommand, commandHandler, innerYargs, parentCommands, commandIndex, helpOnly);\n          });\n        }\n      } else if (isCommandBuilderOptionDefinitions(builder)) {\n        innerYargs = yargs.getInternalMethods().reset(aliases);\n        Object.keys(commandHandler.builder).forEach(function (key) {\n          innerYargs.option(key, builder[key]);\n        });\n      }\n\n      return this.parseAndUpdateUsage(isDefaultCommand, commandHandler, innerYargs, parentCommands, commandIndex, helpOnly);\n    }\n  }, {\n    key: \"parseAndUpdateUsage\",\n    value: function parseAndUpdateUsage(isDefaultCommand, commandHandler, innerYargs, parentCommands, commandIndex, helpOnly) {\n      if (isDefaultCommand) innerYargs.getInternalMethods().getUsageInstance().unfreeze(true);\n\n      if (this.shouldUpdateUsage(innerYargs)) {\n        innerYargs.getInternalMethods().getUsageInstance().usage(this.usageFromParentCommandsCommandHandler(parentCommands, commandHandler), commandHandler.description);\n      }\n\n      var innerArgv = innerYargs.getInternalMethods().runYargsParserAndExecuteCommands(null, undefined, true, commandIndex, helpOnly);\n      return isPromise(innerArgv) ? innerArgv.then(function (argv) {\n        return {\n          aliases: innerYargs.parsed.aliases,\n          innerArgv: argv\n        };\n      }) : {\n        aliases: innerYargs.parsed.aliases,\n        innerArgv: innerArgv\n      };\n    }\n  }, {\n    key: \"shouldUpdateUsage\",\n    value: function shouldUpdateUsage(yargs) {\n      return !yargs.getInternalMethods().getUsageInstance().getUsageDisabled() && yargs.getInternalMethods().getUsageInstance().getUsage().length === 0;\n    }\n  }, {\n    key: \"usageFromParentCommandsCommandHandler\",\n    value: function usageFromParentCommandsCommandHandler(parentCommands, commandHandler) {\n      var c = DEFAULT_MARKER.test(commandHandler.original) ? commandHandler.original.replace(DEFAULT_MARKER, '').trim() : commandHandler.original;\n      var pc = parentCommands.filter(function (c) {\n        return !DEFAULT_MARKER.test(c);\n      });\n      pc.push(c);\n      return \"$0 \".concat(pc.join(' '));\n    }\n  }, {\n    key: \"handleValidationAndGetResult\",\n    value: function handleValidationAndGetResult(isDefaultCommand, commandHandler, innerArgv, currentContext, aliases, yargs, middlewares, positionalMap) {\n      if (!yargs.getInternalMethods().getHasOutput()) {\n        var validation = yargs.getInternalMethods().runValidation(aliases, positionalMap, yargs.parsed.error, isDefaultCommand);\n        innerArgv = maybeAsyncResult(innerArgv, function (result) {\n          validation(result);\n          return result;\n        });\n      }\n\n      if (commandHandler.handler && !yargs.getInternalMethods().getHasOutput()) {\n        yargs.getInternalMethods().setHasOutput();\n        var populateDoubleDash = !!yargs.getOptions().configuration['populate--'];\n        yargs.getInternalMethods().postProcess(innerArgv, populateDoubleDash, false, false);\n        innerArgv = applyMiddleware(innerArgv, yargs, middlewares, false);\n        innerArgv = maybeAsyncResult(innerArgv, function (result) {\n          var handlerResult = commandHandler.handler(result);\n          return isPromise(handlerResult) ? handlerResult.then(function () {\n            return result;\n          }) : result;\n        });\n\n        if (!isDefaultCommand) {\n          yargs.getInternalMethods().getUsageInstance().cacheHelpMessage();\n        }\n\n        if (isPromise(innerArgv) && !yargs.getInternalMethods().hasParseCallback()) {\n          innerArgv.catch(function (error) {\n            try {\n              yargs.getInternalMethods().getUsageInstance().fail(null, error);\n            } catch (_err) {}\n          });\n        }\n      }\n\n      if (!isDefaultCommand) {\n        currentContext.commands.pop();\n        currentContext.fullCommands.pop();\n      }\n\n      return innerArgv;\n    }\n  }, {\n    key: \"applyMiddlewareAndGetResult\",\n    value: function applyMiddlewareAndGetResult(isDefaultCommand, commandHandler, innerArgv, currentContext, helpOnly, aliases, yargs) {\n      var _this5 = this;\n\n      var positionalMap = {};\n      if (helpOnly) return innerArgv;\n\n      if (!yargs.getInternalMethods().getHasOutput()) {\n        positionalMap = this.populatePositionals(commandHandler, innerArgv, currentContext, yargs);\n      }\n\n      var middlewares = this.globalMiddleware.getMiddleware().slice(0).concat(commandHandler.middlewares);\n      var maybePromiseArgv = applyMiddleware(innerArgv, yargs, middlewares, true);\n      return isPromise(maybePromiseArgv) ? maybePromiseArgv.then(function (resolvedInnerArgv) {\n        return _this5.handleValidationAndGetResult(isDefaultCommand, commandHandler, resolvedInnerArgv, currentContext, aliases, yargs, middlewares, positionalMap);\n      }) : this.handleValidationAndGetResult(isDefaultCommand, commandHandler, maybePromiseArgv, currentContext, aliases, yargs, middlewares, positionalMap);\n    }\n  }, {\n    key: \"populatePositionals\",\n    value: function populatePositionals(commandHandler, argv, context, yargs) {\n      argv._ = argv._.slice(context.commands.length);\n      var demanded = commandHandler.demanded.slice(0);\n      var optional = commandHandler.optional.slice(0);\n      var positionalMap = {};\n      this.validation.positionalCount(demanded.length, argv._.length);\n\n      while (demanded.length) {\n        var demand = demanded.shift();\n        this.populatePositional(demand, argv, positionalMap);\n      }\n\n      while (optional.length) {\n        var maybe = optional.shift();\n        this.populatePositional(maybe, argv, positionalMap);\n      }\n\n      argv._ = context.commands.concat(argv._.map(function (a) {\n        return '' + a;\n      }));\n      this.postProcessPositionals(argv, positionalMap, this.cmdToParseOptions(commandHandler.original), yargs);\n      return positionalMap;\n    }\n  }, {\n    key: \"populatePositional\",\n    value: function populatePositional(positional, argv, positionalMap) {\n      var cmd = positional.cmd[0];\n\n      if (positional.variadic) {\n        positionalMap[cmd] = argv._.splice(0).map(String);\n      } else {\n        if (argv._.length) positionalMap[cmd] = [String(argv._.shift())];\n      }\n    }\n  }, {\n    key: \"cmdToParseOptions\",\n    value: function cmdToParseOptions(cmdString) {\n      var parseOptions = {\n        array: [],\n        default: {},\n        alias: {},\n        demand: {}\n      };\n      var parsed = parseCommand(cmdString);\n      parsed.demanded.forEach(function (d) {\n        var _d$cmd = _toArray(d.cmd),\n            cmd = _d$cmd[0],\n            aliases = _d$cmd.slice(1);\n\n        if (d.variadic) {\n          parseOptions.array.push(cmd);\n          parseOptions.default[cmd] = [];\n        }\n\n        parseOptions.alias[cmd] = aliases;\n        parseOptions.demand[cmd] = true;\n      });\n      parsed.optional.forEach(function (o) {\n        var _o$cmd = _toArray(o.cmd),\n            cmd = _o$cmd[0],\n            aliases = _o$cmd.slice(1);\n\n        if (o.variadic) {\n          parseOptions.array.push(cmd);\n          parseOptions.default[cmd] = [];\n        }\n\n        parseOptions.alias[cmd] = aliases;\n      });\n      return parseOptions;\n    }\n  }, {\n    key: \"postProcessPositionals\",\n    value: function postProcessPositionals(argv, positionalMap, parseOptions, yargs) {\n      var _this6 = this;\n\n      var options = Object.assign({}, yargs.getOptions());\n      options.default = Object.assign(parseOptions.default, options.default);\n\n      for (var _i = 0, _Object$keys = Object.keys(parseOptions.alias); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n        options.alias[key] = (options.alias[key] || []).concat(parseOptions.alias[key]);\n      }\n\n      options.array = options.array.concat(parseOptions.array);\n      options.config = {};\n      var unparsed = [];\n      Object.keys(positionalMap).forEach(function (key) {\n        positionalMap[key].map(function (value) {\n          if (options.configuration['unknown-options-as-args']) options.key[key] = true;\n          unparsed.push(\"--\".concat(key));\n          unparsed.push(value);\n        });\n      });\n      if (!unparsed.length) return;\n      var config = Object.assign({}, options.configuration, {\n        'populate--': false\n      });\n      var parsed = this.shim.Parser.detailed(unparsed, Object.assign({}, options, {\n        configuration: config\n      }));\n\n      if (parsed.error) {\n        yargs.getInternalMethods().getUsageInstance().fail(parsed.error.message, parsed.error);\n      } else {\n        var positionalKeys = Object.keys(positionalMap);\n        Object.keys(positionalMap).forEach(function (key) {\n          positionalKeys.push.apply(positionalKeys, _toConsumableArray(parsed.aliases[key]));\n        });\n        Object.keys(parsed.argv).forEach(function (key) {\n          if (positionalKeys.includes(key)) {\n            if (!positionalMap[key]) positionalMap[key] = parsed.argv[key];\n\n            if (!_this6.isInConfigs(yargs, key) && !_this6.isDefaulted(yargs, key) && Object.prototype.hasOwnProperty.call(argv, key) && Object.prototype.hasOwnProperty.call(parsed.argv, key) && (Array.isArray(argv[key]) || Array.isArray(parsed.argv[key]))) {\n              argv[key] = [].concat(argv[key], parsed.argv[key]);\n            } else {\n              argv[key] = parsed.argv[key];\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"isDefaulted\",\n    value: function isDefaulted(yargs, key) {\n      var _yargs$getOptions = yargs.getOptions(),\n          defaults = _yargs$getOptions.default;\n\n      return Object.prototype.hasOwnProperty.call(defaults, key) || Object.prototype.hasOwnProperty.call(defaults, this.shim.Parser.camelCase(key));\n    }\n  }, {\n    key: \"isInConfigs\",\n    value: function isInConfigs(yargs, key) {\n      var _this7 = this;\n\n      var _yargs$getOptions2 = yargs.getOptions(),\n          configObjects = _yargs$getOptions2.configObjects;\n\n      return configObjects.some(function (c) {\n        return Object.prototype.hasOwnProperty.call(c, key);\n      }) || configObjects.some(function (c) {\n        return Object.prototype.hasOwnProperty.call(c, _this7.shim.Parser.camelCase(key));\n      });\n    }\n  }, {\n    key: \"runDefaultBuilderOn\",\n    value: function runDefaultBuilderOn(yargs) {\n      if (!this.defaultCommand) return;\n\n      if (this.shouldUpdateUsage(yargs)) {\n        var commandString = DEFAULT_MARKER.test(this.defaultCommand.original) ? this.defaultCommand.original : this.defaultCommand.original.replace(/^[^[\\]<>]*/, '$0 ');\n        yargs.getInternalMethods().getUsageInstance().usage(commandString, this.defaultCommand.description);\n      }\n\n      var builder = this.defaultCommand.builder;\n\n      if (isCommandBuilderCallback(builder)) {\n        return builder(yargs, true);\n      } else if (!isCommandBuilderDefinition(builder)) {\n        Object.keys(builder).forEach(function (key) {\n          yargs.option(key, builder[key]);\n        });\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"moduleName\",\n    value: function moduleName(obj) {\n      var mod = whichModule(obj);\n      if (!mod) throw new Error(\"No command name given for module: \".concat(this.shim.inspect(obj)));\n      return this.commandFromFilename(mod.filename);\n    }\n  }, {\n    key: \"commandFromFilename\",\n    value: function commandFromFilename(filename) {\n      return this.shim.path.basename(filename, this.shim.path.extname(filename));\n    }\n  }, {\n    key: \"extractDesc\",\n    value: function extractDesc(_ref) {\n      var describe = _ref.describe,\n          description = _ref.description,\n          desc = _ref.desc;\n\n      for (var _i2 = 0, _arr = [describe, description, desc]; _i2 < _arr.length; _i2++) {\n        var test = _arr[_i2];\n        if (typeof test === 'string' || test === false) return test;\n        assertNotStrictEqual(test, true, this.shim);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"freeze\",\n    value: function freeze() {\n      this.frozens.push({\n        handlers: this.handlers,\n        aliasMap: this.aliasMap,\n        defaultCommand: this.defaultCommand\n      });\n    }\n  }, {\n    key: \"unfreeze\",\n    value: function unfreeze() {\n      var frozen = this.frozens.pop();\n      assertNotStrictEqual(frozen, undefined, this.shim);\n      this.handlers = frozen.handlers;\n      this.aliasMap = frozen.aliasMap;\n      this.defaultCommand = frozen.defaultCommand;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.handlers = {};\n      this.aliasMap = {};\n      this.defaultCommand = undefined;\n      this.requireCache = new Set();\n      return this;\n    }\n  }]);\n\n  return CommandInstance;\n}();\nexport function command(usage, validation, globalMiddleware, shim) {\n  return new CommandInstance(usage, validation, globalMiddleware, shim);\n}\nexport function isCommandBuilderDefinition(builder) {\n  return typeof builder === 'object' && !!builder.builder && typeof builder.handler === 'function';\n}\n\nfunction isCommandAndAliases(cmd) {\n  return cmd.every(function (c) {\n    return typeof c === 'string';\n  });\n}\n\nexport function isCommandBuilderCallback(builder) {\n  return typeof builder === 'function';\n}\n\nfunction isCommandBuilderOptionDefinitions(builder) {\n  return typeof builder === 'object';\n}\n\nexport function isCommandHandlerDefinition(cmd) {\n  return typeof cmd === 'object' && !Array.isArray(cmd);\n}","map":{"version":3,"names":["assertNotStrictEqual","isPromise","applyMiddleware","commandMiddlewareFactory","parseCommand","isYargsInstance","maybeAsyncResult","whichModule","DEFAULT_MARKER","CommandInstance","usage","validation","globalMiddleware","shim","requireCache","Set","handlers","aliasMap","frozens","dir","req","callerFile","opts","recurse","Array","isArray","extensions","parentVisit","visit","o","obj","joined","filename","visited","has","add","addHandler","requireDirectory","require","cmd","description","builder","handler","commandMiddleware","deprecated","aliases","middlewares","isCommandAndAliases","command","isCommandHandlerDefinition","moduleName","concat","extractDesc","isCommandBuilderDefinition","parsedCommand","map","alias","isDefault","parsedAliases","filter","c","test","length","push","slice","replace","forEach","original","demanded","optional","defaultCommand","Object","keys","yargs","parsed","commandIndex","helpOnly","helpOrVersionSet","commandHandler","currentContext","getInternalMethods","getContext","parentCommands","commands","isDefaultCommand","fullCommands","builderResult","applyBuilderUpdateUsageAndParse","then","result","applyMiddlewareAndGetResult","innerArgv","innerYargs","isCommandBuilderCallback","builderOutput","reset","output","parseAndUpdateUsage","isCommandBuilderOptionDefinitions","key","option","getUsageInstance","unfreeze","shouldUpdateUsage","usageFromParentCommandsCommandHandler","runYargsParserAndExecuteCommands","undefined","argv","getUsageDisabled","getUsage","trim","pc","join","positionalMap","getHasOutput","runValidation","error","setHasOutput","populateDoubleDash","getOptions","configuration","postProcess","handlerResult","cacheHelpMessage","hasParseCallback","catch","fail","_err","pop","populatePositionals","getMiddleware","maybePromiseArgv","resolvedInnerArgv","handleValidationAndGetResult","context","_","positionalCount","demand","shift","populatePositional","maybe","a","postProcessPositionals","cmdToParseOptions","positional","variadic","splice","String","cmdString","parseOptions","array","default","d","options","assign","config","unparsed","value","Parser","detailed","message","positionalKeys","includes","isInConfigs","isDefaulted","prototype","hasOwnProperty","call","defaults","camelCase","configObjects","some","commandString","mod","Error","inspect","commandFromFilename","path","basename","extname","describe","desc","frozen","every"],"sources":["/Users/mu.../Documents/Boolean/React/WeatherApp/node_modules/yargs/build/lib/command.js"],"sourcesContent":["import { assertNotStrictEqual, } from './typings/common-types.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { applyMiddleware, commandMiddlewareFactory, } from './middleware.js';\nimport { parseCommand } from './parse-command.js';\nimport { isYargsInstance, } from './yargs-factory.js';\nimport { maybeAsyncResult } from './utils/maybe-async-result.js';\nimport whichModule from './utils/which-module.js';\nconst DEFAULT_MARKER = /(^\\*)|(^\\$0)/;\nexport class CommandInstance {\n    constructor(usage, validation, globalMiddleware, shim) {\n        this.requireCache = new Set();\n        this.handlers = {};\n        this.aliasMap = {};\n        this.frozens = [];\n        this.shim = shim;\n        this.usage = usage;\n        this.globalMiddleware = globalMiddleware;\n        this.validation = validation;\n    }\n    addDirectory(dir, req, callerFile, opts) {\n        opts = opts || {};\n        if (typeof opts.recurse !== 'boolean')\n            opts.recurse = false;\n        if (!Array.isArray(opts.extensions))\n            opts.extensions = ['js'];\n        const parentVisit = typeof opts.visit === 'function' ? opts.visit : (o) => o;\n        opts.visit = (obj, joined, filename) => {\n            const visited = parentVisit(obj, joined, filename);\n            if (visited) {\n                if (this.requireCache.has(joined))\n                    return visited;\n                else\n                    this.requireCache.add(joined);\n                this.addHandler(visited);\n            }\n            return visited;\n        };\n        this.shim.requireDirectory({ require: req, filename: callerFile }, dir, opts);\n    }\n    addHandler(cmd, description, builder, handler, commandMiddleware, deprecated) {\n        let aliases = [];\n        const middlewares = commandMiddlewareFactory(commandMiddleware);\n        handler = handler || (() => { });\n        if (Array.isArray(cmd)) {\n            if (isCommandAndAliases(cmd)) {\n                [cmd, ...aliases] = cmd;\n            }\n            else {\n                for (const command of cmd) {\n                    this.addHandler(command);\n                }\n            }\n        }\n        else if (isCommandHandlerDefinition(cmd)) {\n            let command = Array.isArray(cmd.command) || typeof cmd.command === 'string'\n                ? cmd.command\n                : this.moduleName(cmd);\n            if (cmd.aliases)\n                command = [].concat(command).concat(cmd.aliases);\n            this.addHandler(command, this.extractDesc(cmd), cmd.builder, cmd.handler, cmd.middlewares, cmd.deprecated);\n            return;\n        }\n        else if (isCommandBuilderDefinition(builder)) {\n            this.addHandler([cmd].concat(aliases), description, builder.builder, builder.handler, builder.middlewares, builder.deprecated);\n            return;\n        }\n        if (typeof cmd === 'string') {\n            const parsedCommand = parseCommand(cmd);\n            aliases = aliases.map(alias => parseCommand(alias).cmd);\n            let isDefault = false;\n            const parsedAliases = [parsedCommand.cmd].concat(aliases).filter(c => {\n                if (DEFAULT_MARKER.test(c)) {\n                    isDefault = true;\n                    return false;\n                }\n                return true;\n            });\n            if (parsedAliases.length === 0 && isDefault)\n                parsedAliases.push('$0');\n            if (isDefault) {\n                parsedCommand.cmd = parsedAliases[0];\n                aliases = parsedAliases.slice(1);\n                cmd = cmd.replace(DEFAULT_MARKER, parsedCommand.cmd);\n            }\n            aliases.forEach(alias => {\n                this.aliasMap[alias] = parsedCommand.cmd;\n            });\n            if (description !== false) {\n                this.usage.command(cmd, description, isDefault, aliases, deprecated);\n            }\n            this.handlers[parsedCommand.cmd] = {\n                original: cmd,\n                description,\n                handler,\n                builder: builder || {},\n                middlewares,\n                deprecated,\n                demanded: parsedCommand.demanded,\n                optional: parsedCommand.optional,\n            };\n            if (isDefault)\n                this.defaultCommand = this.handlers[parsedCommand.cmd];\n        }\n    }\n    getCommandHandlers() {\n        return this.handlers;\n    }\n    getCommands() {\n        return Object.keys(this.handlers).concat(Object.keys(this.aliasMap));\n    }\n    hasDefaultCommand() {\n        return !!this.defaultCommand;\n    }\n    runCommand(command, yargs, parsed, commandIndex, helpOnly, helpOrVersionSet) {\n        const commandHandler = this.handlers[command] ||\n            this.handlers[this.aliasMap[command]] ||\n            this.defaultCommand;\n        const currentContext = yargs.getInternalMethods().getContext();\n        const parentCommands = currentContext.commands.slice();\n        const isDefaultCommand = !command;\n        if (command) {\n            currentContext.commands.push(command);\n            currentContext.fullCommands.push(commandHandler.original);\n        }\n        const builderResult = this.applyBuilderUpdateUsageAndParse(isDefaultCommand, commandHandler, yargs, parsed.aliases, parentCommands, commandIndex, helpOnly, helpOrVersionSet);\n        return isPromise(builderResult)\n            ? builderResult.then(result => this.applyMiddlewareAndGetResult(isDefaultCommand, commandHandler, result.innerArgv, currentContext, helpOnly, result.aliases, yargs))\n            : this.applyMiddlewareAndGetResult(isDefaultCommand, commandHandler, builderResult.innerArgv, currentContext, helpOnly, builderResult.aliases, yargs);\n    }\n    applyBuilderUpdateUsageAndParse(isDefaultCommand, commandHandler, yargs, aliases, parentCommands, commandIndex, helpOnly, helpOrVersionSet) {\n        const builder = commandHandler.builder;\n        let innerYargs = yargs;\n        if (isCommandBuilderCallback(builder)) {\n            const builderOutput = builder(yargs.getInternalMethods().reset(aliases), helpOrVersionSet);\n            if (isPromise(builderOutput)) {\n                return builderOutput.then(output => {\n                    innerYargs = isYargsInstance(output) ? output : yargs;\n                    return this.parseAndUpdateUsage(isDefaultCommand, commandHandler, innerYargs, parentCommands, commandIndex, helpOnly);\n                });\n            }\n        }\n        else if (isCommandBuilderOptionDefinitions(builder)) {\n            innerYargs = yargs.getInternalMethods().reset(aliases);\n            Object.keys(commandHandler.builder).forEach(key => {\n                innerYargs.option(key, builder[key]);\n            });\n        }\n        return this.parseAndUpdateUsage(isDefaultCommand, commandHandler, innerYargs, parentCommands, commandIndex, helpOnly);\n    }\n    parseAndUpdateUsage(isDefaultCommand, commandHandler, innerYargs, parentCommands, commandIndex, helpOnly) {\n        if (isDefaultCommand)\n            innerYargs.getInternalMethods().getUsageInstance().unfreeze(true);\n        if (this.shouldUpdateUsage(innerYargs)) {\n            innerYargs\n                .getInternalMethods()\n                .getUsageInstance()\n                .usage(this.usageFromParentCommandsCommandHandler(parentCommands, commandHandler), commandHandler.description);\n        }\n        const innerArgv = innerYargs\n            .getInternalMethods()\n            .runYargsParserAndExecuteCommands(null, undefined, true, commandIndex, helpOnly);\n        return isPromise(innerArgv)\n            ? innerArgv.then(argv => ({\n                aliases: innerYargs.parsed.aliases,\n                innerArgv: argv,\n            }))\n            : {\n                aliases: innerYargs.parsed.aliases,\n                innerArgv: innerArgv,\n            };\n    }\n    shouldUpdateUsage(yargs) {\n        return (!yargs.getInternalMethods().getUsageInstance().getUsageDisabled() &&\n            yargs.getInternalMethods().getUsageInstance().getUsage().length === 0);\n    }\n    usageFromParentCommandsCommandHandler(parentCommands, commandHandler) {\n        const c = DEFAULT_MARKER.test(commandHandler.original)\n            ? commandHandler.original.replace(DEFAULT_MARKER, '').trim()\n            : commandHandler.original;\n        const pc = parentCommands.filter(c => {\n            return !DEFAULT_MARKER.test(c);\n        });\n        pc.push(c);\n        return `$0 ${pc.join(' ')}`;\n    }\n    handleValidationAndGetResult(isDefaultCommand, commandHandler, innerArgv, currentContext, aliases, yargs, middlewares, positionalMap) {\n        if (!yargs.getInternalMethods().getHasOutput()) {\n            const validation = yargs\n                .getInternalMethods()\n                .runValidation(aliases, positionalMap, yargs.parsed.error, isDefaultCommand);\n            innerArgv = maybeAsyncResult(innerArgv, result => {\n                validation(result);\n                return result;\n            });\n        }\n        if (commandHandler.handler && !yargs.getInternalMethods().getHasOutput()) {\n            yargs.getInternalMethods().setHasOutput();\n            const populateDoubleDash = !!yargs.getOptions().configuration['populate--'];\n            yargs\n                .getInternalMethods()\n                .postProcess(innerArgv, populateDoubleDash, false, false);\n            innerArgv = applyMiddleware(innerArgv, yargs, middlewares, false);\n            innerArgv = maybeAsyncResult(innerArgv, result => {\n                const handlerResult = commandHandler.handler(result);\n                return isPromise(handlerResult)\n                    ? handlerResult.then(() => result)\n                    : result;\n            });\n            if (!isDefaultCommand) {\n                yargs.getInternalMethods().getUsageInstance().cacheHelpMessage();\n            }\n            if (isPromise(innerArgv) &&\n                !yargs.getInternalMethods().hasParseCallback()) {\n                innerArgv.catch(error => {\n                    try {\n                        yargs.getInternalMethods().getUsageInstance().fail(null, error);\n                    }\n                    catch (_err) {\n                    }\n                });\n            }\n        }\n        if (!isDefaultCommand) {\n            currentContext.commands.pop();\n            currentContext.fullCommands.pop();\n        }\n        return innerArgv;\n    }\n    applyMiddlewareAndGetResult(isDefaultCommand, commandHandler, innerArgv, currentContext, helpOnly, aliases, yargs) {\n        let positionalMap = {};\n        if (helpOnly)\n            return innerArgv;\n        if (!yargs.getInternalMethods().getHasOutput()) {\n            positionalMap = this.populatePositionals(commandHandler, innerArgv, currentContext, yargs);\n        }\n        const middlewares = this.globalMiddleware\n            .getMiddleware()\n            .slice(0)\n            .concat(commandHandler.middlewares);\n        const maybePromiseArgv = applyMiddleware(innerArgv, yargs, middlewares, true);\n        return isPromise(maybePromiseArgv)\n            ? maybePromiseArgv.then(resolvedInnerArgv => this.handleValidationAndGetResult(isDefaultCommand, commandHandler, resolvedInnerArgv, currentContext, aliases, yargs, middlewares, positionalMap))\n            : this.handleValidationAndGetResult(isDefaultCommand, commandHandler, maybePromiseArgv, currentContext, aliases, yargs, middlewares, positionalMap);\n    }\n    populatePositionals(commandHandler, argv, context, yargs) {\n        argv._ = argv._.slice(context.commands.length);\n        const demanded = commandHandler.demanded.slice(0);\n        const optional = commandHandler.optional.slice(0);\n        const positionalMap = {};\n        this.validation.positionalCount(demanded.length, argv._.length);\n        while (demanded.length) {\n            const demand = demanded.shift();\n            this.populatePositional(demand, argv, positionalMap);\n        }\n        while (optional.length) {\n            const maybe = optional.shift();\n            this.populatePositional(maybe, argv, positionalMap);\n        }\n        argv._ = context.commands.concat(argv._.map(a => '' + a));\n        this.postProcessPositionals(argv, positionalMap, this.cmdToParseOptions(commandHandler.original), yargs);\n        return positionalMap;\n    }\n    populatePositional(positional, argv, positionalMap) {\n        const cmd = positional.cmd[0];\n        if (positional.variadic) {\n            positionalMap[cmd] = argv._.splice(0).map(String);\n        }\n        else {\n            if (argv._.length)\n                positionalMap[cmd] = [String(argv._.shift())];\n        }\n    }\n    cmdToParseOptions(cmdString) {\n        const parseOptions = {\n            array: [],\n            default: {},\n            alias: {},\n            demand: {},\n        };\n        const parsed = parseCommand(cmdString);\n        parsed.demanded.forEach(d => {\n            const [cmd, ...aliases] = d.cmd;\n            if (d.variadic) {\n                parseOptions.array.push(cmd);\n                parseOptions.default[cmd] = [];\n            }\n            parseOptions.alias[cmd] = aliases;\n            parseOptions.demand[cmd] = true;\n        });\n        parsed.optional.forEach(o => {\n            const [cmd, ...aliases] = o.cmd;\n            if (o.variadic) {\n                parseOptions.array.push(cmd);\n                parseOptions.default[cmd] = [];\n            }\n            parseOptions.alias[cmd] = aliases;\n        });\n        return parseOptions;\n    }\n    postProcessPositionals(argv, positionalMap, parseOptions, yargs) {\n        const options = Object.assign({}, yargs.getOptions());\n        options.default = Object.assign(parseOptions.default, options.default);\n        for (const key of Object.keys(parseOptions.alias)) {\n            options.alias[key] = (options.alias[key] || []).concat(parseOptions.alias[key]);\n        }\n        options.array = options.array.concat(parseOptions.array);\n        options.config = {};\n        const unparsed = [];\n        Object.keys(positionalMap).forEach(key => {\n            positionalMap[key].map(value => {\n                if (options.configuration['unknown-options-as-args'])\n                    options.key[key] = true;\n                unparsed.push(`--${key}`);\n                unparsed.push(value);\n            });\n        });\n        if (!unparsed.length)\n            return;\n        const config = Object.assign({}, options.configuration, {\n            'populate--': false,\n        });\n        const parsed = this.shim.Parser.detailed(unparsed, Object.assign({}, options, {\n            configuration: config,\n        }));\n        if (parsed.error) {\n            yargs\n                .getInternalMethods()\n                .getUsageInstance()\n                .fail(parsed.error.message, parsed.error);\n        }\n        else {\n            const positionalKeys = Object.keys(positionalMap);\n            Object.keys(positionalMap).forEach(key => {\n                positionalKeys.push(...parsed.aliases[key]);\n            });\n            Object.keys(parsed.argv).forEach(key => {\n                if (positionalKeys.includes(key)) {\n                    if (!positionalMap[key])\n                        positionalMap[key] = parsed.argv[key];\n                    if (!this.isInConfigs(yargs, key) &&\n                        !this.isDefaulted(yargs, key) &&\n                        Object.prototype.hasOwnProperty.call(argv, key) &&\n                        Object.prototype.hasOwnProperty.call(parsed.argv, key) &&\n                        (Array.isArray(argv[key]) || Array.isArray(parsed.argv[key]))) {\n                        argv[key] = [].concat(argv[key], parsed.argv[key]);\n                    }\n                    else {\n                        argv[key] = parsed.argv[key];\n                    }\n                }\n            });\n        }\n    }\n    isDefaulted(yargs, key) {\n        const { default: defaults } = yargs.getOptions();\n        return (Object.prototype.hasOwnProperty.call(defaults, key) ||\n            Object.prototype.hasOwnProperty.call(defaults, this.shim.Parser.camelCase(key)));\n    }\n    isInConfigs(yargs, key) {\n        const { configObjects } = yargs.getOptions();\n        return (configObjects.some(c => Object.prototype.hasOwnProperty.call(c, key)) ||\n            configObjects.some(c => Object.prototype.hasOwnProperty.call(c, this.shim.Parser.camelCase(key))));\n    }\n    runDefaultBuilderOn(yargs) {\n        if (!this.defaultCommand)\n            return;\n        if (this.shouldUpdateUsage(yargs)) {\n            const commandString = DEFAULT_MARKER.test(this.defaultCommand.original)\n                ? this.defaultCommand.original\n                : this.defaultCommand.original.replace(/^[^[\\]<>]*/, '$0 ');\n            yargs\n                .getInternalMethods()\n                .getUsageInstance()\n                .usage(commandString, this.defaultCommand.description);\n        }\n        const builder = this.defaultCommand.builder;\n        if (isCommandBuilderCallback(builder)) {\n            return builder(yargs, true);\n        }\n        else if (!isCommandBuilderDefinition(builder)) {\n            Object.keys(builder).forEach(key => {\n                yargs.option(key, builder[key]);\n            });\n        }\n        return undefined;\n    }\n    moduleName(obj) {\n        const mod = whichModule(obj);\n        if (!mod)\n            throw new Error(`No command name given for module: ${this.shim.inspect(obj)}`);\n        return this.commandFromFilename(mod.filename);\n    }\n    commandFromFilename(filename) {\n        return this.shim.path.basename(filename, this.shim.path.extname(filename));\n    }\n    extractDesc({ describe, description, desc }) {\n        for (const test of [describe, description, desc]) {\n            if (typeof test === 'string' || test === false)\n                return test;\n            assertNotStrictEqual(test, true, this.shim);\n        }\n        return false;\n    }\n    freeze() {\n        this.frozens.push({\n            handlers: this.handlers,\n            aliasMap: this.aliasMap,\n            defaultCommand: this.defaultCommand,\n        });\n    }\n    unfreeze() {\n        const frozen = this.frozens.pop();\n        assertNotStrictEqual(frozen, undefined, this.shim);\n        ({\n            handlers: this.handlers,\n            aliasMap: this.aliasMap,\n            defaultCommand: this.defaultCommand,\n        } = frozen);\n    }\n    reset() {\n        this.handlers = {};\n        this.aliasMap = {};\n        this.defaultCommand = undefined;\n        this.requireCache = new Set();\n        return this;\n    }\n}\nexport function command(usage, validation, globalMiddleware, shim) {\n    return new CommandInstance(usage, validation, globalMiddleware, shim);\n}\nexport function isCommandBuilderDefinition(builder) {\n    return (typeof builder === 'object' &&\n        !!builder.builder &&\n        typeof builder.handler === 'function');\n}\nfunction isCommandAndAliases(cmd) {\n    return cmd.every(c => typeof c === 'string');\n}\nexport function isCommandBuilderCallback(builder) {\n    return typeof builder === 'function';\n}\nfunction isCommandBuilderOptionDefinitions(builder) {\n    return typeof builder === 'object';\n}\nexport function isCommandHandlerDefinition(cmd) {\n    return typeof cmd === 'object' && !Array.isArray(cmd);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}