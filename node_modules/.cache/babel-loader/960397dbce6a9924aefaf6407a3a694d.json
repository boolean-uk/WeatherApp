{"ast":null,"code":"import _slicedToArray from \"/Users/mu.../Documents/Boolean/React/WeatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/mu.../Documents/Boolean/React/WeatherApp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport WeatherHome from \"./components/WeatherHomeScreen\";\nimport \"./components/styles/style.css\";\nimport { useState } from \"react\"; // import { query } from \"express\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  var _useState3 = useState(\"london\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var api = {\n    key: \"cd51bfb08430241168a813edfe9e9d8f\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n  };\n\n  function SearchWeatherLocation(SearchEvent) {\n    console.log(SearchEvent);\n\n    if (SearchEvent.key === search) {\n      var url = \"\".concat(api.base, \"weather?q=\").concat(search, \"&units=metric&APPID=\").concat(api.key);\n      console.log(url);\n      fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        setWeather(result);\n        setSearch(\"\");\n        console.log(result);\n      });\n    }\n  } //   useEffect(() => {\n  //     fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n  //       .then((res) => res.json())\n  //       .then((data) => {\n  //         setWeather(data);\n  //         // const { temp } = data.main;\n  //         // const place = data.name;\n  //         // const { description, icon } = data.weather[0];\n  //         // const { sunrise, sunset } = data.sys;\n  //       });\n  //   }, []);\n\n\n  console.log(weather);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WeatherHome, {\n      weather: weather,\n      setWeather: setWeather,\n      search: search,\n      setSearch: setSearch,\n      SearchWeatherLocation: SearchWeatherLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"AhZ7g66EkysmrA/ADlWImzYpoBw=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["WeatherHome","useState","App","weather","setWeather","search","setSearch","api","key","base","SearchWeatherLocation","SearchEvent","console","log","url","fetch","then","res","json","result"],"sources":["/Users/mu.../Documents/Boolean/React/WeatherApp/src/App.js"],"sourcesContent":["import WeatherHome from \"./components/WeatherHomeScreen\";\nimport \"./components/styles/style.css\";\nimport { useState } from \"react\";\n// import { query } from \"express\";\n\nexport default function App() {\n  const [weather, setWeather] = useState([]);\n  const [search, setSearch] = useState(\"london\");\n\n  const api = {\n    key: \"cd51bfb08430241168a813edfe9e9d8f\",\n    base: \"https://api.openweathermap.org/data/2.5/\",\n  };\n\n  function SearchWeatherLocation(SearchEvent) {\n    console.log(SearchEvent);\n    if (SearchEvent.key === search) {\n      const url = `${api.base}weather?q=${search}&units=metric&APPID=${api.key}`;\n      console.log(url);\n      fetch(url)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setSearch(\"\");\n          console.log(result);\n        });\n    }\n  }\n  //   useEffect(() => {\n  //     fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n  //       .then((res) => res.json())\n  //       .then((data) => {\n  //         setWeather(data);\n  //         // const { temp } = data.main;\n  //         // const place = data.name;\n  //         // const { description, icon } = data.weather[0];\n  //         // const { sunrise, sunset } = data.sys;\n  //       });\n  //   }, []);\n\n  console.log(weather);\n\n  return (\n    <>\n      <WeatherHome\n        weather={weather}\n        setWeather={setWeather}\n        search={search}\n        setSearch={setSearch}\n        SearchWeatherLocation={SearchWeatherLocation}\n      />\n      <main></main>\n    </>\n  );\n}\n"],"mappings":";;;;;AAAA,OAAOA,WAAP,MAAwB,gCAAxB;AACA,OAAO,+BAAP;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,gBAA8BD,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOE,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAA4BH,QAAQ,CAAC,QAAD,CAApC;EAAA;EAAA,IAAOI,MAAP;EAAA,IAAeC,SAAf;;EAEA,IAAMC,GAAG,GAAG;IACVC,GAAG,EAAE,kCADK;IAEVC,IAAI,EAAE;EAFI,CAAZ;;EAKA,SAASC,qBAAT,CAA+BC,WAA/B,EAA4C;IAC1CC,OAAO,CAACC,GAAR,CAAYF,WAAZ;;IACA,IAAIA,WAAW,CAACH,GAAZ,KAAoBH,MAAxB,EAAgC;MAC9B,IAAMS,GAAG,aAAMP,GAAG,CAACE,IAAV,uBAA2BJ,MAA3B,iCAAwDE,GAAG,CAACC,GAA5D,CAAT;MACAI,OAAO,CAACC,GAAR,CAAYC,GAAZ;MACAC,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQ,UAACC,GAAD;QAAA,OAASA,GAAG,CAACC,IAAJ,EAAT;MAAA,CADR,EAEGF,IAFH,CAEQ,UAACG,MAAD,EAAY;QAChBf,UAAU,CAACe,MAAD,CAAV;QACAb,SAAS,CAAC,EAAD,CAAT;QACAM,OAAO,CAACC,GAAR,CAAYM,MAAZ;MACD,CANH;IAOD;EACF,CAtB2B,CAuB5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAP,OAAO,CAACC,GAAR,CAAYV,OAAZ;EAEA,oBACE;IAAA,wBACE,QAAC,WAAD;MACE,OAAO,EAAEA,OADX;MAEE,UAAU,EAAEC,UAFd;MAGE,MAAM,EAAEC,MAHV;MAIE,SAAS,EAAEC,SAJb;MAKE,qBAAqB,EAAEI;IALzB;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAA;MAAA;MAAA;IAAA,QARF;EAAA,gBADF;AAYD;;GAjDuBR,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}